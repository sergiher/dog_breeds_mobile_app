// Mocks generated by Mockito 5.4.5 from annotations
// in dog_breeds_mobile_app/test/ui/home/home_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:ui' as _i5;

import 'package:dog_breeds_mobile_app/data/repositories/breeds_repository.dart'
    as _i2;
import 'package:dog_breeds_mobile_app/ui/home/view_models/home_viewmodel.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBreedsRepository_0 extends _i1.SmartFake
    implements _i2.BreedsRepository {
  _FakeBreedsRepository_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [BreedsListViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockBreedsListViewModel extends _i1.Mock
    implements _i3.BreedsListViewModel {
  MockBreedsListViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BreedsRepository get breedsRepository =>
      (super.noSuchMethod(
            Invocation.getter(#breedsRepository),
            returnValue: _FakeBreedsRepository_0(
              this,
              Invocation.getter(#breedsRepository),
            ),
          )
          as _i2.BreedsRepository);

  @override
  List<String> get breeds =>
      (super.noSuchMethod(Invocation.getter(#breeds), returnValue: <String>[])
          as List<String>);

  @override
  set breeds(List<String>? _breeds) => super.noSuchMethod(
    Invocation.setter(#breeds, _breeds),
    returnValueForMissingStub: null,
  );

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  set isLoading(bool? _isLoading) => super.noSuchMethod(
    Invocation.setter(#isLoading, _isLoading),
    returnValueForMissingStub: null,
  );

  @override
  set error(String? _error) => super.noSuchMethod(
    Invocation.setter(#error, _error),
    returnValueForMissingStub: null,
  );

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i4.Future<void> getBreedsFromRepo() =>
      (super.noSuchMethod(
            Invocation.method(#getBreedsFromRepo, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  void addListener(_i5.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i5.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
