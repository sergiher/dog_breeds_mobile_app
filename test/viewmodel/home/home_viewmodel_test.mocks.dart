// Mocks generated by Mockito 5.4.5 from annotations
// in dog_breeds_mobile_app/test/viewmodel/home/home_viewmodel_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dog_breeds_mobile_app/data/repositories/breeds_repository.dart'
    as _i3;
import 'package:dog_breeds_mobile_app/data/services/api/breeds_api_client.dart'
    as _i2;
import 'package:dog_breeds_mobile_app/data/services/api/model/breed_api_model.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBreedsListService_0 extends _i1.SmartFake
    implements _i2.BreedsListService {
  _FakeBreedsListService_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [BreedsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockBreedsRepository extends _i1.Mock implements _i3.BreedsRepository {
  MockBreedsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BreedsListService get service =>
      (super.noSuchMethod(
            Invocation.getter(#service),
            returnValue: _FakeBreedsListService_0(
              this,
              Invocation.getter(#service),
            ),
          )
          as _i2.BreedsListService);

  @override
  _i4.Future<List<String>> getBreeds() =>
      (super.noSuchMethod(
            Invocation.method(#getBreeds, []),
            returnValue: _i4.Future<List<String>>.value(<String>[]),
          )
          as _i4.Future<List<String>>);

  @override
  _i4.Future<List<dynamic>> getBreedSubBreeds(_i5.Breed? breed) =>
      (super.noSuchMethod(
            Invocation.method(#getBreedSubBreeds, [breed]),
            returnValue: _i4.Future<List<dynamic>>.value(<dynamic>[]),
          )
          as _i4.Future<List<dynamic>>);

  @override
  _i4.Future<List<dynamic>> getBreedImage(_i5.Breed? breed) =>
      (super.noSuchMethod(
            Invocation.method(#getBreedImage, [breed]),
            returnValue: _i4.Future<List<dynamic>>.value(<dynamic>[]),
          )
          as _i4.Future<List<dynamic>>);
}
